<%
    driver = p("grootfs.driver")
    abort("Driver '#{driver}' not supported.") if driver != "overlay-xfs"
-%>
#!/usr/bin/env bash

set -e

source /var/vcap/jobs/garden/bin/envs
source /var/vcap/packages/greenskeeper/bin/system-preparation

mkdir -p "$MONIT_DIR"
exec 1>> "${MONIT_DIR}/garden.out.log"
exec 2>> "${MONIT_DIR}/garden.err.log"

/var/vcap/packages/greenskeeper/bin/greenskeeper

rm -f "$RUNTIME_BIN_DIR"/init
cp /var/vcap/packages/guardian/bin/init "$RUNTIME_BIN_DIR"/init

permit_device_control
create_loop_devices 256

<% if !p("garden.deprecated_use_garden_shed") && p("garden.image_plugin", "") == "" %>
${BASE_PATH}/overlay-xfs-setup
<% end %>

/var/vcap/packages/thresholder/bin/thresholder "<%= p("garden.graph_cleanup_threshold_in_mb") %>" "<%= p("grootfs.graph_cleanup_threshold_in_mb") %>" "<%= p("grootfs.reserved_space_for_other_jobs_in_mb") %>" "$DATA_DIR" "$GARDEN_CONFIG_DIR/grootfs_config.yml"
/var/vcap/packages/thresholder/bin/thresholder "<%= p("garden.graph_cleanup_threshold_in_mb") %>" "<%= p("grootfs.graph_cleanup_threshold_in_mb") %>" "<%= p("grootfs.reserved_space_for_other_jobs_in_mb") %>" "$DATA_DIR" "$GARDEN_CONFIG_DIR/privileged_grootfs_config.yml"

<% if p("garden.apparmor_profile") == "garden-default" %>
  load_apparmor_profile "$GARDEN_CONFIG_DIR"/garden-default
<% end %>

if ! echo madvise > /sys/kernel/mm/transparent_hugepage/enabled ; then
  echo "Could not disable automatic transparent hugepage allocation. This is normal in bosh lite."
fi

echo 1 > /proc/sys/kernel/dmesg_restrict

ulimit -n 65536
echo 4194304 > /proc/sys/kernel/pid_max
ulimit -u unlimited

exec 1> >( tee -a $LOG_DIR/garden.stdout.log | logger -p user.info -t vcap.garden ) \
     2> >( tee -a $LOG_DIR/garden.stderr.log | logger -p user.error -t vcap.garden )

setup_cmd="/var/vcap/packages/guardian/bin/gdn setup"
exec_command="exec"
id_map_start=1
garden_configfile_path="$GARDEN_CONFIG_DIR/config.ini"

<% if p("garden.experimental_rootless_mode") %>
  <% if p("garden.listen_network") == "tcp" %>
    exec_command="exec execas --uid $MAXIMUS --gid $MAXIMUS"
  <% else %>
    exec_command="exec socket2me --socket-path <%= p("garden.listen_address") %> --uid $MAXIMUS --gid $MAXIMUS --socket-uid 1000 --socket-gid 1000"
  <% end %>
  setup_cmd="$setup_cmd --rootless-uid $MAXIMUS --rootless-gid $MAXIMUS"
  id_map_start=65536

  # runc makes use of the XDG_RUNTIME_DIR env var in order to determine
  # where to place the runc root dir in rootless mode.
  # Given that this is not set on stemcells we choose to set it explicitely
  # here.
  export XDG_RUNTIME_DIR=/var/run/user/$MAXIMUS
  export TMPDIR=$TMPDIR/user/$MAXIMUS/tmp

  mkdir -p $XDG_RUNTIME_DIR $TMPDIR
  chmod 700 $XDG_RUNTIME_DIR
  chown "$MAXIMUS:$MAXIMUS" $LOG_DIR $TMPDIR $DEPOT_PATH $XDG_RUNTIME_DIR

  garden_rootless_config_dir="$GARDEN_DIR/config"
  mkdir -p "$garden_rootless_config_dir"
  cp "$GARDEN_CONFIG_DIR/grootfs_config.yml" "$GARDEN_CONFIG_DIR/config.ini" "$garden_rootless_config_dir"
  chown "$MAXIMUS:$MAXIMUS" "$garden_rootless_config_dir/grootfs_config.yml" "$garden_rootless_config_dir/config.ini"

  garden_configfile_path="$garden_rootless_config_dir/config.ini"
<% end %>

$setup_cmd

echo $$ > $PIDFILE

$exec_command /var/vcap/packages/guardian/bin/gdn \
  --config "$garden_configfile_path" \
  server \
  --uid-map-start="$id_map_start" \
  --uid-map-length=$((MAXIMUS-id_map_start)) \
  --gid-map-start="$id_map_start" \
  --gid-map-length=$((MAXIMUS-id_map_start))
